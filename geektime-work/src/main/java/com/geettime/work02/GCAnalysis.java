package com.geettime.work02;

public class GCAnalysis{
    /**
     * 不同GC和堆内存环境下GC日志分析总结
     * 根据GClog.txt日志分析表明
     * 1、使用相同的垃圾收集器的情况下：
     * 随着堆内存的增大，发生垃圾回收的频率逐渐减少，
     * 同时，每次垃圾回收持续的时间不断增大
     * 2、在堆内存一致的情况下：
     * 并行垃圾收集器在垃圾收集的过程中会发生STW，但是吞吐量比较大
     * 而并发GC（CMS）垃圾收集器在暂停时间方面优于并行垃圾收集器，但是吞吐量方面相对并行垃圾收集器较弱，
     * 而G1GC则介于两者之间的垃圾收集器
     *
     * 3、总之每种垃圾收集各有优缺点，
     * 在选择垃圾收集器的时候需要根据实际场景选择不同的垃圾收
     * 如果是吞吐量优先的业务场景优先采用server默认的垃圾收集器（ParallelScavenge）
     * 如果是暂停时间优先的业务场景优先采用并发GC(CMS)
     *
     * 4、在堆内存设置上如果设置太小会导致频繁的发生GC操作，还有可能发生内存溢出
     * 如果设置太大，会导致每次发生GC暂停时间较长
     * 一般设置为系统内存的70%~80%
     *
     *
     *
     *
     *
     *
     */

}


